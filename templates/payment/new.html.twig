{% extends 'base.html.twig' %}

{% block body %}

<div class="parallax-container valign-wrapper">
        <div class="section no-pad-bot">
            <div class="container">
                <h1 class="header center white-text light">{{ campaign.title }}</h1>
            </div>
        </div>
        <div class="parallax"><img src="/assets/images/8.jpg" alt="Titre de la campagne"></div>
    </div>

    <div class="container">
        <div class="section">
            <div class="row">
                <div class="col s12 center">
                    <h4>Participez en quelques secondes</h4>
                    <p>Il manque : {{ (campaign.goal - campaign.getRecoltedAmount)|format_number(locale='fr') }} €</p>
                </div>
            </div>
            
            <!--   Form Section   -->
            <div class="card">
                <div class="card-content">
                    <div class="row">
                        {{ form_start(form, { 'attr' : {'method' : 'post', 'id' : 'payment-form'}} ) }}
                            <h5 class="center">Votre identité</h5>
                            <div class="input-field col s12 l6">
                                {{ form_widget(form.name, {'attr': {'class': 'validate', 'type': 'text'}}) }}
                                {{ form_label(form.name, 'Votre Nom') }} 
                            </div>
                            <div class="input-field col s12 l6">
                                {{ form_widget(form.email, {'attr': {'class': 'validate', 'type': 'email'}}) }}
                                {{ form_label(form.email, 'Votre Email') }} 
                            </div>
                            <div class="input-field col s12 l6">
                                {{ form_widget(form.amount, {'attr': {'class': 'validate', 'type': 'number', 'value': amount, 'min': 10}}) }}
                                {{ form_label(form.amount, 'Votre participation (10€ minimum)') }} 
                            </div>
                            <p>
                                <label>
                                    {{ form_widget(form.isAnonymous, { 'attr' : {'class ':'validate ', 'value':'1' } }) }}
                                    <span>Masquer mon identité auprès des autres participants</span>
                                </label>
                            </p>

                            <div class="clearfix"></div>

                            <h5 class="center">Paiement</h5>
                          
                            <div class="form-row">
                                <label for="card-element">
                                    Credit or debit card
                                </label> 
                                <div id="card-element">
                                    <!-- A Stripe Element will be inserted here. -->
                                </div>
                                <!-- Use to display form errors. -->
                                <div id="card-errors" role="alert"></div>
                            </div>
                            
                            <div class="input-field col s12 l6">
                                <a href="{{path("app_campaign_show", {'id': campaign.id})}}" class="btn btn-large waves-effect waves-light grey col s12">Annuler</a>
                            </div>
                            <div class="input-field col s12 l6">
                                <button class="btn btn-large waves-effect waves-light pink lighten-1 col s12" type="submit">
                                    Participer
                                    <i class="material-icons right">euro_symbol</i>
                                </button>
                            </div>
                        {{ form_end(form) }}
                    </div>
                </div>
            </div>
            
        </div>
    </div>

{% endblock %}

{% block javascripts %}
<!--Script pour Stripe -->
<script src="https://js.stripe.com/v3/"></script>
<script>
    var response = fetch('/secret').then(function(response) {
        return response.json();
        }).then(function(responseJson) {
        var clientSecret = responseJson.client_secret;
        // Render the form to collect payment details, then
        // call stripe.confirmCardPayment() with the client secret.
    });

    var stripe = Stripe('pk_test_51KqurDDDzNgbKUF1nJE50OparHlpSoAkmzcDZsvryqQiMPFO5mTFKc9SfgsfomDSjfQpkRjNhzASgQ95Au9NqYAi00WAl0xaVe');
    var elements = stripe.elements();
    // Custom styling can be passed to options when creating an Element.
    var style = {
    base: {
        // Add your base input styles here. For example:
        fontSize: '16px',
        color: '#32325d',
    },
    };
    // Create an instance of the card Element.
    var card = elements.create('card', {style: style}
    );
    // Add an instance of the card Element into the `card-element` <div>.
    card.mount('#card-element');

    {# card.addEventListener('change'), function(event) {
        let displayError = document.getElementById('card-errors');
        if(event.error) {
            displayError.textContent = event.error.message;
        }else{
            displayError.textContent = '';
        }
    }
    // create a token or display error when form is submitted
    let form = document.getElementById('payment-form');
    form.addEventListener('submit'), function(event) {
        event.preventDefault();
        // If the client secret was rendered server-side as a data-secret attribute
        // on the <form> element, you can retrieve it here by calling `form.dataset.secret`
        stripe.confirmCardPayment(clientSecret, {
            payment_method: {
            card: card,
            billing_details: {
                name: 'Jenny Rosen'
            }
            }
        }).then(function(result) {
            if(result.error) {
            // Show error to your customer (for example, insufficient funds)
            console.log(result.error.message);
            }else{
                // The payment has been processed!
                if(result.paymentIntent.status === 'succeeded') {
                    // Show a success message to your customer
                    // There's a risk of the customer closing the window before callback
                    // execution. Set up a webhook or plugin to listen for the
                    // payment_intent.succeeded event that handles any business critical
                    // post-payment actions.
                }
            }
        } 
   #}


</script>
{% endblock %}
